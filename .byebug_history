exit
last_entry_date_s
last_entry_date
last_entry
exit
user.preferences["faturday_enabled"]
c
user
c
user.preferences["auto_faturdays"]
user.preferences["auto_faturdays"][day_token]
exit
week
c
week
c
week
c
last_weight
week
exit
(84847/453).to_i
84847/453
averages
exit
c
week["weight"].to_i
(week["weight"] / 453).to_i
(last_weight/453).to_i
(last_weight/420).to_i
last_weight/420
last_weight.to_i/420
last_weight.to_i
last_weight
c
averages
averages.count
c
averages
exit
week.sum(:calories).to_i
week.sum(:calories)
week
days
averages
exit
averages
exit
averages
exit
averages
exit
averages
exit
averages
exit
averages
c
averages
c
averages
exit
week_av
c
week_av
c
week_av
c
week_av
c
week_av
exit
c
day
date
exit
date
day
days
c
days
exit
week_av
date
c
week_av
averages
date
exit
week_average((Date.today - 17.days))
week_average(Date.today - 17.days)
week_average(Date.today - 7.days)
week_average(Date.today)
week_av
averages
exit
week_av
c
averages
c
week_entries["calories"]
week_entries["calories"] << 3
week_entries
day_totals["calories"]
day_totals
c
exit
c
week_entries[:weight]
week_entries
c
week_average(Date.today)
week_av
averages.count
c
old_user_ids["10"]
c
old_user_ids['3']
old_user_ids["3"]
old_user_ids[:3]
old_user_ids[3]
old_user_ids.inspect
old_user_ids
user_old_ids
c
Rails.application.routes.url_helpers.edit_password_reset_url(user.reset_token, email: user.email, host: "hi")
Rails.application.routes.url_helpers.edit_password_reset_path(user.reset_token, email: user.email)
Rails.application.routes.url_helpers.edit_password_reset_path(user.reset_token, {email: user.email, host: "https://w8mngr.com"})
Rails.application.routes.url_helpers.edit_password_reset_path(user.reset_token, email: user.email, :host: "https://w8mngr.com")
Rails.application.routes.url_helpers.edit_password_reset_path(user.reset_token, email: user.email, host: "https://w8mngr.com")
c
Rails.application.routes.url_helpers.edit_password_reset_url(user.reset_token, email: user.email, host: "https://w8mngr.com")
Rails.application.routes.url_helpers.edit_password_reset_url(user.reset_token, email: user.email, host: "hi")
Rails.application.routes.url_helpers.edit_password_reset_url(user.reset_token, email: user.email)
Rails.application.routes.url_helpers.edit_password_reset_path(user.reset_token, email: user.email)
                               .edit_password_reset_path(user.reset_token, email: user.email)
Rails.application.routes.url_helpers
c
Rails.application.routes.url_helpers.edit_password_reset_url(user.reset_token, email: user.email)
Rails.application.routes.url_helpers.edit_password_reset_path(user.reset_token, email: user.email)
c
user.reset_token
user.create_reset_digest
user.reset_token
Rails.application.routes.url_helpers.edit_password_reset_path(123)
Rails.application.routes.url_helpers.edit_password_reset_path
Rails.application.routes.url_helpers.edit_password_path
Rails.application.routes.url_helpers
c
n
week_entries
averages
week_entries[:weight].inject{}
week_entries[:weight].inhect{}
week_entries[:weight]
week_entries["weight"]
week_entries
c
new_entry.errors
new_entry.save
new_entry
n
day
n
fd_vals
fd_enabled
c
fd_enabled
c
current_user.preferences
fd_enabled
c
fd_enabled = true
current_user.preferences
fd_vals
fd_enabled
c
cc
n
fd_vals
fd_enabled
c
@user.preferences["auto_faturdays"]["mo"]
@user.preferences["auto_faturdays"].each
@user.preferences["auto_faturdays"]
c
@user.preferences
c
paras["faturday"].each do |day| puts day end
params["faturday"]
@user.preferences["faturday"]
c
params
c
params
c
params
c
messages
c
self.preferences
c
self.preferences
c
self.preferences
c
default_preferences
self.preferences
c
@user.preferences
c
n
@user.preferences = {}
@user.preferences
c
messages.load
messages
c
user_messages.size
user_messages.number
user_messages.count
user_messages
user_messages[0].message
c
user_messages[0].message
user_messages
c
type
c
exit
messages[0][:text]
messages
c
result["nutrients"][0]["measures"]
result["nutrients"][1]["measures"]
result
c
measure
c
ls
measure
c
measure
c
measure
c
measure
c
measure
c
recipe_params
@recipe.errors
@recipe.update(recipe_params)
c
flash
c
