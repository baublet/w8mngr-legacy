c
@user.errors
@user.save
@user.email = "thisisn'tanemail"
c
height_cm = height_unit.convert_to('cm').scalar.to_i
height_cm = height_unit.convert_to('cm').round.scalar.to_i
height_cm = height_unit.convert_to('cm').round.scalar.to_r
height_cm = height_unit.convert_to('cm').round.scalar
height_cm = height_unit.convert_to('cm').round.to_f
height_cm = height_unit.convert_to('cm').round(1)
height_cm = height_unit.convert_to('cm').truncate
height_cm = height_unit.convert_to('cm').abs
height_cm = height_unit.convert_to('cm').round
height_cm
c
time_zone_options_for_select(nil, nil, ActiveSupport::TimeZone)
n
time_zone_options_for_select(nil, nil, ActiveSupport::TimeZone)
c
@user.save!
@user.save_options
c
@user.save_options
@user.save
c
n
pairs[0].squish == value.downcase.squish
value.downcase.squish
value.downcase
pairs[0].squish
value
pairs
n
pairs
n
pairs
n
pairs
n
pairs = allowed_value.split(":")
pairs
allowed_value
n
allowed_value
pairs
allowed_values
c
n
pairs
allowed_values
c
allowed_value
pairs
c
n
allowed_values
n
allowed_values
n
c
n
@user.save_options
@user.save!
@user.save
@user.option["select"]
@user.option
c
@user.options
c
@user.save_options!
@user.option["Test Option"]
@user.option
@user
Option.all
@user.save_options
@user.options
@user
@user.save!
c
key
c
@user.option_info
@user.options
@user.options.is_a?(Hash)
@user.save_options
@user.save
Option.all
c
Option.all
c
n
Option.all
c
Option.all
option.All
n
m
Option.all
n
Option.all
c
next
help
?
/
c
Option.all
c
Option.find_by(name: "Test Option")
Option.find_by(key: "Test Option")
Option.first
Option.all
@option_info
key
c
@options
c
@options
c
@user.save!
@user.save
@user.email = "tester@test.com"
@user.save_options
@user.option["height"]
@user.save!
@user
@user.save_options
@user.save
c
@user.save_options
c
@user.save_options
@user.option["height"]
@user = User.find_by(email: "user@example.com")
@user.save
@user.option["height"] = 72
@user.save
@user.option["height"]
@user.save
c
option.kind
option
c
option.kind
option
c
option
c
@option_values.is_a?(Array)
c
@option_values[0]c
@option_values[0]
@option_values
c
@option_values.count
@option_values.size
@option_values.is_a?(OptionValue)
@option_values.is_a?(Hash)
@option_values.is_a?(Array)
@option_values
coll = @option_values.find_all { |var| var.id == 1 }
c
@option_values.each do |val|
@option_values.each
c
coll = @option_values.find_all { |var| var.id == 1 }
@option_values
c
@option_c
self
c
self
self.options
@options
self.options_info
self.options
Option.all
Options.all
@options_info
options_info
options
this.options
@options_info
@options
c
@user.save
@user.option["Test option"] = "hello"
c
@user.save
@user.option["Test option"] = "hello"
c
@user.option["Test option"]
@user.option["Test option"] = "hi"
@user.option["Test option"]
c
@user.option["Test option"]
@user.option["Test option"] = "hi"
@user.option["Test option"]
c
@user.option("Test option")
@user.option("Test option", "hi")
@user.option("Test option")
c
@user.option("Test option", "hi")
@user.option("Test option") = "hi"
@user.option("Test option")
@user.option["Test option"]
@user.options["Test option"]
c
@user.options["Test option"]
@user.options
@user.options["Test option"]
c
@user.options["Test option"]
@user = User.find_by_email("user@example.com")
c
@user.options["Test option"]
@user = User.find_by_email("user@example.com")
c
@user.options["Test option"]
@user.options
@user.options["Test option"]
@user = User.find_by_email("user@example.com")
@user.save
@user.options["Test option"]
@user.options["Test option"] = "test"
@user.options["Test option"]
@user.options
c
@user.options
c
@user.options
c
@user.options
c
@user.options
c
@user.options
c
@user.options
c
option_info
c
@user.options
c
@user.options
c
@user.options
c
@user.options
c
@user.preferences
@user.save
@user.preferences
c
